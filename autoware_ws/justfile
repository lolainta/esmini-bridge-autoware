set shell := ["bash", "-c"]

source_aw := 'source /autoware/install/setup.bash'
autoware_launch_pkg := shell(source_aw + " && ros2 pkg prefix autoware_launch --share")

default:
  just launch crest-curve

launch map:
  {{source_aw}} && ros2 launch autoware_launch \
    autoware.launch.xml \
    map_path:=/resources/osm/ \
    lanelet2_map_file:={{map}}.osm \
    vehicle_model:=sample_vehicle \
    sensor_model:=sample_sensor_kit \
    launch_sensing:=false \
    launch_localization:=false \
    launch_perception:=false \
    launch_vehicle_interface:=false \
    system_run_mode:=planning_simulation \
    launch_system_monitor:=false \
    launch_dummy_diag_publisher:=true \
    diagnostic_graph_aggregator_graph_path:={{autoware_launch_pkg}}/config/system/diagnostics/autoware-main.yaml \
    is_simulation:=true

sample map:
  yq e '\
    ( .[] | select(.module == "planning" and .args.topic == "/planning/scenario_planning/trajectory") ).args.warn_rate = 3.0 \
  ' -i /autoware/src/launcher/autoware_launch/autoware_launch/config/system/component_state_monitor/topics.yaml
  {{source_aw}} && ros2 launch autoware_launch \
    planning_simulator.launch.xml \
    map_path:=/resources/osm/ \
    lanelet2_map_file:={{map}}.osm \
    vehicle_model:=sample_vehicle \
    sensor_model:=sample_sensor_kit \
    launch_sensing:=false \
    launch_localization:=false \
    launch_perception:=false \
    launch_vehicle_interface:=false \
    system_run_mode:=planning_simulation \
    launch_system_monitor:=false \
    launch_dummy_diag_publisher:=true \
    diagnostic_graph_aggregator_graph_path:={{autoware_launch_pkg}}/config/system/diagnostics/autoware-main.yaml \
    is_simulation:=true

